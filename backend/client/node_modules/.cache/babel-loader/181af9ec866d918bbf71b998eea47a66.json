{"ast":null,"code":"var _jsxFileName = \"/Users/balajibv/Documents/React/loan-application/src/components/PersonalDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PersonalDetails = _ref => {\n  _s();\n\n  let {\n    formData,\n    setActiveTab,\n    setFormData,\n    test,\n    setTest\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(formData);\n    setActiveTab(currTab => currTab + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"input-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Personal Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"first_name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"first_name\",\n          placeholder: \"Enter your first name\",\n          autoComplete: \"off\",\n          value: formData.first_name,\n          onChange: e => {\n            setFormData({ ...formData,\n              first_name: e.target.value\n            });\n          },\n          ref: register({\n            required: 'First name is required.',\n            pattern: {\n              value: /^[a-zA-Z]+$/,\n              message: 'First name should contain only characters.'\n            }\n          }),\n          className: `${errors.first_name ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), errors.first_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.first_name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"last_name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"last_name\",\n          placeholder: \"Enter your last name\",\n          autoComplete: \"off\",\n          value: formData.last_name,\n          onChange: e => {\n            setFormData({ ...formData,\n              last_name: e.target.value\n            });\n          },\n          ref: register({\n            required: 'Last name is required.',\n            pattern: {\n              value: /^[a-zA-Z]+$/,\n              message: 'Last name should contain only characters.'\n            }\n          }),\n          className: `${errors.last_name ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), errors.last_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.last_name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"user_email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"user_email\",\n          placeholder: \"Enter your email address\",\n          autoComplete: \"off\",\n          value: formData.user_email,\n          onChange: e => {\n            setFormData({ ...formData,\n              user_email: e.target.value\n            });\n          },\n          ref: register({\n            required: 'Email is required.',\n            pattern: {\n              value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n              message: 'Email is not valid.'\n            }\n          }),\n          className: `${errors.user_email ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), errors.user_email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.user_email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PersonalDetails, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = PersonalDetails;\nexport default PersonalDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalDetails\");","map":{"version":3,"names":["React","useForm","Form","Button","PersonalDetails","formData","setActiveTab","setFormData","test","setTest","register","handleSubmit","errors","onSubmit","data","console","log","currTab","first_name","e","target","value","required","pattern","message","last_name","user_email"],"sources":["/Users/balajibv/Documents/React/loan-application/src/components/PersonalDetails.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\n\nconst PersonalDetails = ({ formData , setActiveTab , setFormData , test , setTest}) => {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(formData)\n    \n    setActiveTab((currTab) => currTab + 1)\n  };\n\n  return (\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\n      <h3>Personal Details</h3>\n      <div className=\"col-md-6 offset-md-3\">\n        <Form.Group controlId=\"first_name\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"first_name\"\n            placeholder=\"Enter your first name\"\n            autoComplete=\"off\"\n            value={formData.first_name}\n            onChange={(e) => {\n              setFormData({ ...formData, first_name: e.target.value });\n            }}\n            ref={register({\n              required: 'First name is required.',\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                message: 'First name should contain only characters.'\n              }\n            })}\n            className={`${errors.first_name ? 'input-error' : ''}`}\n          />\n          {errors.first_name && (\n            <p className=\"errorMsg\">{errors.first_name.message}</p>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId=\"last_name\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"last_name\"\n            placeholder=\"Enter your last name\"\n            autoComplete=\"off\"\n            value={formData.last_name}\n            onChange={(e) => {\n              setFormData({ ...formData, last_name: e.target.value });\n            }}\n            ref={register({\n              required: 'Last name is required.',\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                message: 'Last name should contain only characters.'\n              }\n            })}\n            className={`${errors.last_name ? 'input-error' : ''}`}\n          />\n          {errors.last_name && (\n            <p className=\"errorMsg\">{errors.last_name.message}</p>\n          )}\n        </Form.Group>\n        <Form.Group controlId=\"user_email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"user_email\"\n            placeholder=\"Enter your email address\"\n            autoComplete=\"off\"\n            value={formData.user_email}\n            onChange={(e) => {\n              setFormData({ ...formData, user_email: e.target.value });\n            }}\n            ref={register({\n              required: 'Email is required.',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.'\n              }\n            })}\n            className={`${errors.user_email ? 'input-error' : ''}`}\n          />\n          {errors.user_email && (\n            <p className=\"errorMsg\">{errors.user_email.message}</p>\n          )}\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Next\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default PersonalDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module"}